# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
    



#setup environment
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.7.6 
  displayName: 'Use Python 3.7.6'
 
- script: |
         python -m venv antenv
         source antenv/bin/activate
         pip install gunicorn

#Install requirements
- script: pip install -r requirements.txt
  displayName: 'Install requirements'


    
#Install dependencies

- script: python -m pip install --upgrade pip setuptools wheel
  displayName: 'Install tools'



#run test
- script: |
    python -m pip install flake8
    flake8 .
  displayName: 'Run lint tests'


- script: |
    pip install pytest
    pip install pytest-cov
    pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
  displayName: 'Test with pytest'

- script: |
    echo Deleting .env
    deactivate
    rm -rf .env
  displayName: 'Remove .env before zip'
- task: SSH@0
  inputs:
    sshEndpoint: 'areenweb@40.87.8.185'
    runOptions: 'commands'
    commands: 'gunicorn --bind=0.0.0.0:1742 --workers=4 hello:app'
    readyTimeout: '20000'


       
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true
    quiet: true

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'areenweb@40.87.8.185'
    sourceFolder: 'hello_app/'
    contents: '**'
    targetFolder: 'webapp.py'
    readyTimeout: '20000'
    failOnEmptySource: true




- task: SSH@0
  inputs:
    sshEndpoint: 'areenweb@40.87.8.185'
    runOptions: 'commands'
    commands: 'gunicorn --bind=0.0.0.0:1742 --workers=4 hello:app'
    readyTimeout: '20000'
