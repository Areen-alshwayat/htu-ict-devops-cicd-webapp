# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

#start
  steps:
      

      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : {{ help_app }}'
        inputs:
          azureSubscription: $(azureServiceConnectionId)
          appName: $(help_app)
          package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

          # The following parameter is specific to the Flask example code. You may
          # or may not need a startup command for your app.

          startUpCommand: 'gunicorn --bind=0.0.0.0:174 --workers=4 startup:app'



#deploy procsees
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.7.6 
  displayName: 'Use Python 3.7.6'
 
- script: |
         python -m venv antenv
         source antenv/bin/activate
         python -m pip install --upgrade pip
         pip install setup
         pip install -r requirements.txt
       
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true
    quiet: true


   
    

    

